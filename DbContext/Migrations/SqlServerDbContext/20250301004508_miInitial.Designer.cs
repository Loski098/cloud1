// <auto-generated />
using System;
using DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbContext.Migrations.SqlServerDbContext
{
    [DbContext(typeof(MainDbContext.SqlServerDbContext))]
    [Migration("20250301004508_miInitial")]
    partial class miInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbModels.AddressDbM", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses", "supusr");
                });

            modelBuilder.Entity("DbModels.AnimalDbM", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<int>("Mood")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.Property<Guid>("ZooDbMZooId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("strKind")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("strMood")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AnimalId");

                    b.HasIndex("ZooDbMZooId");

                    b.ToTable("Animals", "supusr");
                });

            modelBuilder.Entity("DbModels.AttractionDbM", b =>
                {
                    b.Property<Guid>("AttractionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressDbMAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttractionTitle")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("CategoryDbMCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.HasKey("AttractionId");

                    b.HasIndex("AddressDbMAddressId");

                    b.HasIndex("CategoryDbMCategoryId");

                    b.ToTable("Attractions", "supusr");
                });

            modelBuilder.Entity("DbModels.CategoryDbM", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Catkind")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", "supusr");
                });

            modelBuilder.Entity("DbModels.CommentDbM", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttractionDbMAttractionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.Property<int>("Sentiment")
                        .HasColumnType("int");

                    b.Property<string>("strSentiment")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CommentId");

                    b.HasIndex("AttractionDbMAttractionId");

                    b.ToTable("Comments", "supusr");
                });

            modelBuilder.Entity("DbModels.CreditCardDbM", b =>
                {
                    b.Property<Guid>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EnryptedToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpirationMonth")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ExpirationYear")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Issuer")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.Property<string>("strIssuer")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CreditCardId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("CreditCards", "supusr");
                });

            modelBuilder.Entity("DbModels.EmployeeDbM", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.Property<string>("strRole")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees", "supusr");
                });

            modelBuilder.Entity("DbModels.UserDbM", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("DbModels.ZooDbM", b =>
                {
                    b.Property<Guid>("ZooId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.HasKey("ZooId");

                    b.ToTable("Zoos", "supusr");
                });

            modelBuilder.Entity("EmployeeDbMZooDbM", b =>
                {
                    b.Property<Guid>("EmployeesDbMEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZoosDbMZooId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeesDbMEmployeeId", "ZoosDbMZooId");

                    b.HasIndex("ZoosDbMZooId");

                    b.ToTable("EmployeeDbMZooDbM", "supusr");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoDbDto", b =>
                {
                    b.Property<int>("NrSeededAdresses")
                        .HasColumnType("int");

                    b.Property<int>("NrSeededAttractions")
                        .HasColumnType("int");

                    b.Property<int>("NrSeededCategories")
                        .HasColumnType("int");

                    b.Property<int>("NrSeededComments")
                        .HasColumnType("int");

                    b.Property<int>("NrUnseededAdresses")
                        .HasColumnType("int");

                    b.Property<int>("NrUnseededAttractions")
                        .HasColumnType("int");

                    b.Property<int>("NrUnseededCategories")
                        .HasColumnType("int");

                    b.Property<int>("NrUnseededComments")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vwInfoDb", "gstusr");
                });

            modelBuilder.Entity("DbModels.AnimalDbM", b =>
                {
                    b.HasOne("DbModels.ZooDbM", "ZooDbM")
                        .WithMany("AnimalsDbM")
                        .HasForeignKey("ZooDbMZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZooDbM");
                });

            modelBuilder.Entity("DbModels.AttractionDbM", b =>
                {
                    b.HasOne("DbModels.AddressDbM", "AddressDbM")
                        .WithMany("AttractionDbM")
                        .HasForeignKey("AddressDbMAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbModels.CategoryDbM", "CategoryDbM")
                        .WithMany("AttractionsDbM")
                        .HasForeignKey("CategoryDbMCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressDbM");

                    b.Navigation("CategoryDbM");
                });

            modelBuilder.Entity("DbModels.CommentDbM", b =>
                {
                    b.HasOne("DbModels.AttractionDbM", "AttractionDbM")
                        .WithMany("CommentsDbM")
                        .HasForeignKey("AttractionDbMAttractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttractionDbM");
                });

            modelBuilder.Entity("DbModels.CreditCardDbM", b =>
                {
                    b.HasOne("DbModels.EmployeeDbM", "EmployeeDbM")
                        .WithOne("CreditCardDbM")
                        .HasForeignKey("DbModels.CreditCardDbM", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDbM");
                });

            modelBuilder.Entity("EmployeeDbMZooDbM", b =>
                {
                    b.HasOne("DbModels.EmployeeDbM", null)
                        .WithMany()
                        .HasForeignKey("EmployeesDbMEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbModels.ZooDbM", null)
                        .WithMany()
                        .HasForeignKey("ZoosDbMZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbModels.AddressDbM", b =>
                {
                    b.Navigation("AttractionDbM");
                });

            modelBuilder.Entity("DbModels.AttractionDbM", b =>
                {
                    b.Navigation("CommentsDbM");
                });

            modelBuilder.Entity("DbModels.CategoryDbM", b =>
                {
                    b.Navigation("AttractionsDbM");
                });

            modelBuilder.Entity("DbModels.EmployeeDbM", b =>
                {
                    b.Navigation("CreditCardDbM");
                });

            modelBuilder.Entity("DbModels.ZooDbM", b =>
                {
                    b.Navigation("AnimalsDbM");
                });
#pragma warning restore 612, 618
        }
    }
}
